# This file will be used by automation when cutting a release of the SDK
# to include code generator change log entries into the release notes.
# This is an auto-generated file. Do not edit.

{
  "smithy-rs": [],
  "aws-sdk-rust": [
    {
      "message": "Add test to exercise excluded headers in aws-sigv4.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#1890"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Support Sigv4 signature generation on PowerPC 32 and 64 bit. This architecture cannot compile `ring`, so the implementation has been updated to rely on `hamc` + `sha2` to achive the same result with broader platform compatibility and higher performance. We also updated the CI which is now running as many tests as possible against i686 and PowerPC 32 and 64 bit.",
      "meta": {
        "bug": true,
        "breaking": true,
        "tada": false
      },
      "author": "crisidev",
      "references": [
        "smithy-rs#1847"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Add test ensuring that a response will error if the response body returns an EOF before the entire body has been read.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "Velfi",
      "references": [
        "smithy-rs#1801"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Fix cargo audit issue on criterion.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#1923"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "<details>\n<summary>The HTTP connector used when making requests is now configurable through `SdkConfig`.</summary>\n\n```rust\nuse std::time::Duration;\nuse aws_smithy_client::{Client, hyper_ext};\nuse aws_smithy_client::erase::DynConnector;\nuse aws_smithy_client::http_connector::ConnectorSettings;\nuse aws_types::SdkConfig;\n\nlet https_connector = hyper_rustls::HttpsConnectorBuilder::new()\n    .with_webpki_roots()\n    .https_only()\n    .enable_http1()\n    .enable_http2()\n    .build();\n\nlet smithy_connector = hyper_ext::Adapter::builder()\n    // Optionally set things like timeouts as well\n    .connector_settings(\n        ConnectorSettings::builder()\n            .connect_timeout(Duration::from_secs(5))\n            .build()\n    )\n    .build(https_connector);\n\nlet sdk_config = aws_config::from_env()\n    .http_connector(smithy_connector)\n    .load()\n    .await;\n\nlet client = Client::new(&sdk_config);\n\n// When sent, this operation will go through the custom smithy connector instead of\n// the default HTTP connector.\nlet op = client\n    .get_object()\n    .bucket(\"some-test-bucket\")\n    .key(\"test.txt\")\n    .send()\n    .await\n    .unwrap();\n```\n\n</details>\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "Velfi",
      "references": [
        "smithy-rs#1225",
        "smithy-rs#1918"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "`<service>::Client::from_conf_conn` has been removed since it's now possible to configure the connection from the\nshared and service configs. To update your code, pass connections to the `http_connector` method during config creation.\n\n<details>\n<summary>Example</summary>\n\nbefore:\n\n```rust\n    let conf = aws_sdk_sts::Config::builder()\n        // The builder has no defaults but setting other fields is omitted for brevity...\n        .build();\n    let (server, request) = capture_request(None);\n    let client = aws_sdk_sts::Client::from_conf_conn(conf, server);\n```\n\nafter:\n\n```rust\n    let (server, request) = capture_request(None);\n    let conf = aws_sdk_sts::Config::builder()\n        // The builder has no defaults but setting other fields is omitted for brevity...\n        .http_connector(server)\n        .build();\n    let client = aws_sdk_sts::Client::from_conf(conf);\n```\n\n</details>\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "Velfi",
      "references": [
        "smithy-rs#1225",
        "smithy-rs#1918"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Add `to_vec` method to `aws_smithy_http::byte_stream::AggregatedBytes`.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "Velfi",
      "references": [
        "smithy-rs#1918"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Ability to add an inline policy or a list of policy ARNs to the `AssumeRoleProvider` builder.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "albe-rosado",
      "references": [
        "aws-sdk-rust#641",
        "smithy-rs#1892"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Removed re-export of `aws_smithy_client::retry::Config` from the `middleware` module.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#1935"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "It was possible in some cases to send some S3 requests without a required upload ID, causing a risk of unintended data\ndeletion and modification. Now, when an operation has query parameters that are marked as required, the omission of\nthose query parameters will cause a BuildError, preventing the invalid operation from being sent.\n",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "Velfi",
      "references": [
        "smithy-rs#1957"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Several breaking changes have been made to errors. See [the upgrade guide](https://github.com/awslabs/aws-sdk-rust/issues/657) for more information.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#1926",
        "smithy-rs#1819"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Generate enums that guide the users to write match expressions in a forward-compatible way.\nBefore this change, users could write a match expression against an enum in a non-forward-compatible way:\n```rust\nmatch some_enum {\n    SomeEnum::Variant1 => { /* ... */ },\n    SomeEnum::Variant2 => { /* ... */ },\n    Unknown(value) if value == \"NewVariant\" => { /* ... */ },\n    _ => { /* ... */ },\n}\n```\nThis code can handle a case for \"NewVariant\" with a version of SDK where the enum does not yet include `SomeEnum::NewVariant`, but breaks with another version of SDK where the enum defines `SomeEnum::NewVariant` because the execution will hit a different match arm, i.e. the last one.\nAfter this change, users are guided to write the above match expression as follows:\n```rust\nmatch some_enum {\n    SomeEnum::Variant1 => { /* ... */ },\n    SomeEnum::Variant2 => { /* ... */ },\n    other @ _ if other.as_str() == \"NewVariant\" => { /* ... */ },\n    _ => { /* ... */ },\n}\n```\nThis is forward-compatible because the execution will hit the second last match arm regardless of whether the enum defines `SomeEnum::NewVariant` or not.\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#1945"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Functions on `aws_smithy_http::endpoint::Endpoint` now return a `Result` instead of panicking.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#1984",
        "smithy-rs#1496"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "`Endpoint::mutable` now takes `impl AsRef<str>` instead of `Uri`. For the old functionality, use `Endpoint::mutable_uri`.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#1984",
        "smithy-rs#1496"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "`Endpoint::immutable` now takes `impl AsRef<str>` instead of `Uri`. For the old functionality, use `Endpoint::immutable_uri`.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#1984",
        "smithy-rs#1496"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Normalize URI paths per RFC3986 when constructing canonical requests, except for S3.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2018"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Implementation of the Debug trait for container shapes now redacts what is printed per the sensitive trait.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#1983",
        "smithy-rs#2029"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "`SdkBody` callbacks have been removed. If you were using these, please [file an issue](https://github.com/awslabs/aws-sdk-rust/issues/new) so that we can better understand your use-case and provide the support you need.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2065"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "`AwsEndpointStage`, a middleware which set endpoints and auth has been split into `AwsAuthStage` and `SmithyEndpointStage`. Related types have also been renamed.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2063"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "The SDK clients now default max idle connections to 70 (previously unlimited) to reduce the likelihood of hitting max file handles in AWS Lambda.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2064",
        "aws-sdk-rust#632"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "The Unit type for a Union member is no longer rendered. The serializers and parsers generated now function accordingly in the absence of the inner data associated with the Unit type.\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#1989"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Fixed and improved the request `tracing` span hierarchy to improve log messages, profiling, and debuggability.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2044",
        "smithy-rs#371"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Add more `tracing` events to signing and event streams",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2057",
        "smithy-rs#371"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Log an `info` on credentials cache miss and adjust level of some credential `tracing` spans/events.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "jdisanti",
      "references": [
        "smithy-rs#2062"
      ],
      "since-commit": "c3de8a3f93201f969c28deb9313c903c1315054d",
      "age": 5
    },
    {
      "message": "Integrate Endpoints 2.0 into the Rust SDK. Endpoints 2.0 enables features like S3 virtual addressing & S3\nobject lambda. As part of this change, there are several breaking changes although efforts have been made to deprecate\nwhere possible to smooth the upgrade path.\n1. `aws_smithy_http::endpoint::Endpoint` and the `endpoint_resolver` methods have been deprecated. In general, these usages\n   should be replaced with usages of `endpoint_url` instead. `endpoint_url` accepts a string so an `aws_smithy_http::Endpoint`\n   does not need to be constructed. This structure and methods will be removed in a future release.\n2. The `endpoint_resolver` method on `<service>::config::Builder` now accepts a service specific endpoint resolver instead\n   of an implementation of `ResolveAwsEndpoint`. Most users will be able to replace these usages with a usage of `endpoint_url`.\n3. `ResolveAwsEndpoint` has been deprecated and will be removed in a future version of the SDK.\n4. The SDK does not support \"pseudo regions\" anymore. Specifically, regions like `iam-fips` will no longer resolve to a FIPS endpoint.\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": true
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#1784",
        "smithy-rs#2074"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 4
    },
    {
      "message": "Add additional configuration parameters to `aws_sdk_s3::Config`.\n\nThe launch of endpoints 2.0 includes more configuration options for S3. The default behavior for endpoint resolution has\nbeen changed. Before, all requests hit the path-style endpoint. Going forward, all requests that can be routed to the\nvirtually hosted bucket will be routed there automatically.\n- `force_path_style`: Requests will now default to the virtually-hosted endpoint `<bucketname>.s3.<region>.amazonaws.com`\n- `use_arn_region`: Enables this client to use an ARN’s region when constructing an endpoint instead of the client’s configured region.\n- `accelerate`: Enables this client to use S3 Transfer Acceleration endpoints.\n\nNote: the AWS SDK for Rust does not currently support Multi Region Access Points (MRAP).\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": true
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#1784",
        "smithy-rs#2074"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 4
    },
    {
      "message": "Move types for AWS SDK credentials to a separate crate.\nA new AWS runtime crate called `aws-credential-types` has been introduced. Types for AWS SDK credentials have been moved to that crate from `aws-config` and `aws-types`. The new crate is placed at the top of the dependency graph among AWS runtime crates with the aim of the downstream crates having access to the types defined in it.\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2108"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 4
    },
    {
      "message": "Add support for overriding profile name and profile file location across all providers. Prior to this change, each provider needed to be updated individually.\n\n### Before\n```rust\nuse aws_config::profile::{ProfileFileCredentialsProvider, ProfileFileRegionProvider};\nuse aws_config::profile::profile_file::{ProfileFiles, ProfileFileKind};\n\nlet profile_files = ProfileFiles::builder()\n    .with_file(ProfileFileKind::Credentials, \"some/path/to/credentials-file\")\n    .build();\nlet credentials_provider = ProfileFileCredentialsProvider::builder()\n    .profile_files(profile_files.clone())\n    .build();\nlet region_provider = ProfileFileRegionProvider::builder()\n    .profile_files(profile_files)\n    .build();\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .region(region_provider)\n    .load()\n    .await;\n```\n\n### After\n```rust\nuse aws_config::profile::{ProfileFileCredentialsProvider, ProfileFileRegionProvider};\nuse aws_config::profile::profile_file::{ProfileFiles, ProfileFileKind};\n\nlet profile_files = ProfileFiles::builder()\n    .with_file(ProfileFileKind::Credentials, \"some/path/to/credentials-file\")\n    .build();\nlet sdk_config = aws_config::from_env()\n    .profile_files(profile_files)\n    .load()\n    .await;\n/// ```\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2152"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 4
    },
    {
      "message": "`aws_config::profile::retry_config` && `aws_config::environment::retry_config` have been removed. Use `aws_config::default_provider::retry_config` instead.",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2162"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 4
    },
    {
      "message": "Add support for resolving FIPS and dual-stack endpoints.\n\nFIPS and dual-stack endpoints can each be configured in multiple ways:\n1. Automatically from the environment and AWS profile\n2. Across all clients loaded from the same `SdkConfig` via `from_env().use_dual_stack(true).load().await`\n3. At a client level when constructing the configuration for an individual client.\n\nNote: Not all services support FIPS and dual-stack.\n",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": true
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2168"
      ],
      "since-commit": "40da9a32b38e198da6ca2223b86c314b26438230",
      "age": 4
    },
    {
      "message": "Improve SDK credentials caching through type safety. `LazyCachingCredentialsProvider` has been renamed to `LazyCredentialsCache` and is no longer treated as a credentials provider. Furthermore, you do not create a `LazyCredentialsCache` directly, and instead you interact with `CredentialsCache`. This introduces the following breaking changes.\n\nIf you previously used `LazyCachingCredentialsProvider`, you can replace it with `CredentialsCache`.\n<details>\n<summary>Example</summary>\n\nBefore:\n```rust\nuse aws_config::meta::credentials::lazy_caching::LazyCachingCredentialsProvider;\nuse aws_types::provider::ProvideCredentials;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\nlet credentials_provider =\n    LazyCachingCredentialsProvider::builder()\n        .load(make_provider())\n        .build();\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nAfter:\n```rust\nuse aws_credential_types::cache::CredentialsCache;\nuse aws_types::provider::ProvideCredentials;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\n// Wrapping a result of `make_provider` in `LazyCredentialsCache` is done automatically.\nlet sdk_config = aws_config::from_env()\n    .credentials_cache(CredentialsCache::lazy()) // This line can be omitted because it is on by default.\n    .credentials_provider(make_provider())\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nIf you previously configured a `LazyCachingCredentialsProvider`, you can use the builder for `LazyCredentialsCache` instead.\n\nBefore:\n```rust\nuse aws_config::meta::credentials::lazy_caching::LazyCachingCredentialsProvider;\nuse aws_types::provider::ProvideCredentials;\nuse std::time::Duration;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\nlet credentials_provider =\n    LazyCachingCredentialsProvider::builder()\n        .load(make_provider())\n        .load_timeout(Duration::from_secs(60)) // Configures timeout.\n        .build();\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nAfter:\n```rust\nuse aws_credential_types::cache::CredentialsCache;\nuse aws_types::provider::ProvideCredentials;\nuse std::time::Duration;\n\nfn make_provider() -> impl ProvideCredentials {\n    // --snip--\n}\n\nlet sdk_config = aws_config::from_env()\n    .credentials_cache(\n        CredentialsCache::lazy_builder()\n            .load_timeout(Duration::from_secs(60)) // Configures timeout.\n            .into_credentials_cache(),\n    )\n    .credentials_provider(make_provider())\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nThe examples above only demonstrate how to use `credentials_cache` and `credentials_provider` methods on `aws_config::ConfigLoader` but the same code update can be applied when you interact with `aws_types::sdk_config::Builder` or the builder for a service-specific config, e.g. `aws_sdk_s3::config::Builder`.\n\n</details>\n\n\nIf you previously configured a `DefaultCredentialsChain` by calling `load_timeout`, `buffer_time`, or `default_credential_expiration` on its builder, you need to call the same set of methods on the builder for `LazyCredentialsCache` instead.\n<details>\n<summary>Example</summary>\n\nBefore:\n```rust\nuse aws_config::default_provider::credentials::DefaultCredentialsChain;\nuse std::time::Duration;\n\nlet credentials_provider = DefaultCredentialsChain::builder()\n    .buffer_time(Duration::from_secs(30))\n    .default_credential_expiration(Duration::from_secs(20 * 60))\n    .build()\n    .await;\n\nlet sdk_config = aws_config::from_env()\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\nAfter:\n```rust\nuse aws_config::default_provider::credentials::default_provider;\nuse aws_credential_types::cache::CredentialsCache;\nuse std::time::Duration;\n\n// Previously used methods no longer exist on the builder for `DefaultCredentialsChain`.\nlet credentials_provider = default_provider().await;\n\nlet sdk_config = aws_config::from_env()\n    .credentials_cache(\n        CredentialsCache::lazy_builder()\n            .buffer_time(Duration::from_secs(30))\n            .default_credential_expiration(Duration::from_secs(20 * 60))\n            .into_credentials_cache(),\n    )\n    .credentials_provider(credentials_provider)\n    .load()\n    .await;\n\nlet client = aws_sdk_s3::Client::new(&sdk_config);\n```\n\n</details>\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2122",
        "smithy-rs#2227"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 2
    },
    {
      "message": "The introduction of `CredentialsCache` comes with an accompanying type `SharedCredentialsCache`, which we will store in the property bag instead of a `SharedCredentialsProvider`. As a result, `aws_http::auth:set_provider` has been updated to `aws_http::auth::set_credentials_cache`.\n\nBefore:\n```rust\nuse aws_credential_types::Credentials;\nuse aws_credential_types::provider::SharedCredentialsProvider;\nuse aws_http::auth::set_provider;\nuse aws_smithy_http::body::SdkBody;\nuse aws_smithy_http::operation;\n\nlet mut req = operation::Request::new(http::Request::new(SdkBody::from(\"some body\")));\nlet credentials = Credentials::new(\"example\", \"example\", None, None, \"my_provider_name\");\nset_provider(\n    &mut req.properties_mut(),\n    SharedCredentialsProvider::new(credentials),\n);\n```\n\nAfter:\n```rust\nuse aws_credential_types::Credentials;\nuse aws_credential_types::cache::{CredentialsCache, SharedCredentialsCache};\nuse aws_credential_types::provider::SharedCredentialsProvider;\nuse aws_http::auth::set_credentials_cache;\nuse aws_smithy_http::body::SdkBody;\nuse aws_smithy_http::operation;\n\nlet mut req = operation::Request::new(http::Request::new(SdkBody::from(\"some body\")));\nlet credentials = Credentials::new(\"example\", \"example\", None, None, \"my_provider_name\");\nlet credentials_cache = CredentialsCache::lazy_builder()\n    .into_credentials_cache()\n    .create_cache(SharedCredentialsProvider::new(credentials));\nset_credentials_cache(\n    &mut req.properties_mut(),\n    SharedCredentialsCache::new(credentials_cache),\n);\n```\n",
      "meta": {
        "bug": false,
        "breaking": true,
        "tada": false
      },
      "author": "ysaito1001",
      "references": [
        "smithy-rs#2122",
        "smithy-rs#2227"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 2
    },
    {
      "message": "Fix endpoint for s3.write_get_object_response(). This bug was introduced in 0.53.",
      "meta": {
        "bug": true,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2204"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 2
    },
    {
      "message": "Add `with_test_defaults()` and `set_test_defaults()` to `<service>::Config`. These methods fill in defaults for configuration that is mandatory to successfully send a request.",
      "meta": {
        "bug": false,
        "breaking": false,
        "tada": false
      },
      "author": "rcoh",
      "references": [
        "smithy-rs#2204"
      ],
      "since-commit": "48ce90d3a32cc87337d87d1f291b41fc64f1e5bd",
      "age": 2
    }
  ],
  "aws-sdk-model": []
}